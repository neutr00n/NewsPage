{"mappings":"iiBAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,SCEAE,EAAAF,EAAA,SAIaG,EAAwB,SAAUC,EAAEC,GAC/C,IAAMC,EAAgBC,SAASC,iBAAiB,SAChDC,QAAQC,IAAIJ,GACZ,IAAMK,GAAU,IAAIC,MACjBC,mBAAmB,GAAI,CACtBC,KAAM,UACNC,MAAO,UACPC,IAAK,YAENC,WAAW,IAAK,KACnBX,EAAcY,SAAQ,SAAAC,GACpB,GAAIf,EAAEgB,SAAWD,EAAjB,CACE,IAAME,EAAa,CACjBC,SACElB,EAAEgB,OAAOG,WAAWA,WAAWC,kBAAkBC,YAC9CA,YAAYC,WAAW,GAAGC,UAC/BC,MACExB,EAAEgB,OAAOG,WAAWA,WAAWC,kBAAkBC,YAC9CA,YAAYD,kBAAkBK,IACnCC,KAAM1B,EAAEgB,OAAOG,WAAWC,kBAAkBG,UAC5CI,IAAK3B,EAAEgB,OAAOY,KACdC,MACE7B,EAAEgB,OAAOG,WAAWW,gBAAgBA,gBAAgBA,gBACjDA,gBAAgBP,UACrBQ,SAAU/B,EAAEgB,OAAOG,WAAWW,gBAAgBA,gBAAgBP,UAC9DS,GAAIhC,EAAEgB,OAAOG,WAAWA,WAAWc,QAAQD,GAE3CE,SAAU3B,GAEP4B,GAAU,EAAVC,GAAU,EAAVC,OAAUC,E,IAAf,QAAKC,EAAAC,EAAcvC,EAAGwC,OAAAC,cAAjBP,GAAAI,EAAAC,EAAUG,QAAAC,MAAVT,GAAU,EAAS,CACtB,GADGI,EAAUM,MACJb,KAAOf,EAAWe,GACzB,M,WAFCI,GAAU,EAAVC,EAAUS,C,aAAVX,GAAU,MAAVK,EAAUO,QAAVP,EAAUO,Q,YAAVX,E,MAAAC,C,EAKLrC,EAAEgB,OAAOG,WAAWA,WAAWC,kBAAkB4B,UAAUC,OACzD,iBAEFjD,EAAEgB,OAAOG,WAAWA,WAAWC,kBAAkB4B,UAAUE,IACzD,eAEFlD,EAAEgB,OAAOG,WAAWA,WAAWC,kBAAkBC,YAAYA,YAAYC,WAAW,GAAG0B,UAAUC,OAC/F,kBAEFjD,EAAEgB,OAAOG,WAAWA,WAAWC,kBAAkBC,YAAYA,YAAYC,WAAW,GAAG0B,UAAUE,IAC/F,gBAEDjD,EAAIkD,KAAKlC,IACV,EAAAnB,EAAAsD,YAAW,WAAYnD,EAEvB,C,iCDpDFoD,EAAkB,GAEjBA,GADL,EAAAvD,EAAAwD,YAAW,YACaC,EAAA1D,EAAA,EAAG,EAAAC,EAAAwD,YAAW,aACf,GAIvB,IAgBME,EAhBAC,EAAWtD,SAASuD,cAAc,cAElCC,EAAmB,mBACrBC,EAAUC,aAAaC,QAAQ,oBAC/BC,EAAcC,KAAKC,MAAML,IAAY,GA0DlC,SAASM,IACdH,EAAYI,KAAI,SAAAC,GACdX,EAASrD,iBAAiB,QAAQU,SAAQ,SAAAuD,GAC/BA,EAAQpC,QAAQD,KAEdoC,EAAGpC,KAEZqC,EACGX,cAAc,wBACdY,aAAa,UAAW,QAC3BD,EAAQX,cAAc,wBAAwBV,UAAUE,IAAI,OAC5DmB,EAAQX,cAAc,WAAWV,UAAUE,IAAI,OAE/CmB,EAAQX,cAAc,SAASa,UAAY,uB,OApEnDd,EAASe,iBAAiB,SAAS,SAACxE,IAuCpC,SAA2BA,GACzB,IAAKA,EAAEgB,OAAOgC,UAAUyB,SAAS,UAC/B,OACK,GAAIzE,EAAEgB,OAAOgC,UAAUyB,SAAS,OAAQ,CAC7C,IAAMC,GAAaX,EAAYW,WAC7B,SAAAN,G,OAAMA,EAAGO,YAAc3E,EAAEgB,OAAO4D,WAAW,GAAG/B,K,IAGhDkB,EAAYc,OAAOH,EAAW,GAE9Bb,aAAaiB,QAAQnB,EAAkBK,KAAKe,UAAUhB,IAEtD/D,EAAEgB,OAAOG,WAAWA,WAAWA,WAAW8B,Q,EAlD5C+B,CAAkBhF,GAClBD,EAAsBC,EAAGqD,E,IAOrBG,EALaO,EAMdI,KACC,SAAAc,G,IACEtD,EAAGsD,EAAHtD,IAEAE,GADKoD,EAALC,MACKD,EAALpD,OACAE,EAAQkD,EAARlD,SACAL,EAAIuD,EAAJvD,KACAF,EAAKyD,EAALzD,MACAQ,EAAEiD,EAAFjD,GACA2C,EAAQM,EAARN,SACAzD,EAAQ+D,EAAR/D,SAGA,OAAO,EAAAiE,EAAAC,YACL5D,EACAK,EACAE,EACAL,EACAC,EACAT,EACAc,EACA2C,E,IAILU,KAAK,IACR5B,EAAS6B,mBAAmB,YAAa9B,GCSN,SAAU+B,GAC3CA,IAEF,IAAMC,EAAgBrF,SAASC,iBAAiB,QAC1CqF,GAAW,EAAA3F,EAAAwD,YAAW,YACvBmC,GAGLD,EAAc1E,SAAQ,SAAA4E,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAAK,CACxC,IAAMtB,EAAUoB,EAASE,GACzB,GAAID,EAAKzD,QAAQD,KAAOqC,EAAQrC,GAAI,CAClC,IAAM6D,EAASH,EAAKpE,WAAW,GAAGA,WAAW,GACvCwE,EAAUJ,EAAKtE,kBACrB0E,EAAQ9C,UAAUE,IAAI,eACtB4C,EAAQ9C,UAAUC,OAAO,iBACzB4C,EAAO7C,UAAUC,OAAO,kBACxB4C,EAAO7C,UAAUE,IAAI,e,MDxD7B,CAAsBgB,GEvBtB,IAAA6B,EAAAnG,EAAA,S,uCAOAoG,EAAAC,WAAWzB,iBAAiB,UAE5B,SAAgC0B,GAC9BA,EAAMC,iBAEN,IAAMC,EAAgBF,EAAMlF,OAAOqF,OAAOxD,MAAMyD,OAAOC,cAEvD,IAAKH,EACH,OA2CJ,SAAyBI,GACvB,GAAIC,OAAOC,WAAW,sBAAsBC,QAC1C,OAEFZ,EAAAa,OAAOC,KAAKL,E,CA/CHM,CAAgB,iCAQ3B,SAA+BV,GAC7B,IAAIW,EAAa,mBAEXC,EAAW7G,SAASuD,cAAc,cACxCsD,EAASzC,UAAY,GAErB,IAEM0C,GAFU,EAAAnH,EAAAwD,YAAWyD,GAECG,QAAO,SAAAC,G,OACjCA,EAAKtF,MAAM0E,cAAca,SAAShB,E,KAkBtC,SAA6BnG,GAC3B+F,EAAAqB,SAASrE,UAAUE,IAAI,oBAEJ,IAAfjD,EAAI2F,QACNI,EAAAqB,SAASrE,UAAUC,OAAO,mB,EAnB5BqE,CAAoBL,GAKtB,SAA6BA,EAAaM,GACxC,IAAMC,EAAUP,EACb9C,KAAI,SAAAc,G,IAAGzD,EAAKyD,EAALzD,MAAOK,EAAKoD,EAALpD,MAAOE,EAAQkD,EAARlD,SAAUL,EAAIuD,EAAJvD,KAAMC,EAAGsD,EAAHtD,IAAKT,EAAQ+D,EAAR/D,SAAUc,EAAEiD,EAAFjD,GAAI2C,EAAQM,EAARN,S,OACvD,EAAAQ,EAAAC,YAAW5D,EAAOK,EAAOE,EAAUL,EAAMC,EAAKT,EAAUc,EAAI2C,E,IAE7DU,KAAK,IAERkC,EAAUhD,UAAYiD,C,CAXtBC,CAAoBR,EAAaD,GACjC9C,G,EAnBAwD,CAAsBtB,GAEtBF,EAAMyB,cAAcC,O","sources":["src/favorite.js","src/js/favorites/index.js","src/js/read/localStorage.js","src/js/search/favorites-search.js"],"sourcesContent":["import './js/mobile-menu';\nimport './js/dark_theme';\n\nimport './js/favorites';\nimport './js/search/favorites-search';\n","import { checkStorageReadNews, getNewsToLocalStorage, makeOpacityReadedNews} from '../read/localStorage'\nimport { getStorage } from '../local-storage';\n\nlet arrayOfReadNews = [];\ngetStorage('readNews')\n  ? (arrayOfReadNews = [...getStorage('readNews')])\n  : (arrayOfReadNews = []);\n\n import { markUpPage } from '../markup/index';\n// const favoritesEL = document.querySelector('.favorits-list');\nconst listNews = document.querySelector('.list-news');\n\nconst LOCALSTORAGE_KEY = 'ID-SAVE-FAVORITE';\nlet idArray = localStorage.getItem('ID-SAVE-FAVORITE');\nlet idArrayPars = JSON.parse(idArray) || [];\n\n// listNews.addEventListener('change', deletNewsFavorite);\nlistNews.addEventListener('click', (e) => {\n  deletNewsFavorite(e);\n  getNewsToLocalStorage(e, arrayOfReadNews);\n});\ncreatFavoritesList(idArrayPars);\n\nmakeOpacityReadedNews(auditArrayNews)\n\nfunction creatFavoritesList(arr) {\n  let array = arr\n    .map(\n      ({\n        url,\n        media,\n        title,\n        abstract,\n        date,\n        photo,\n        id,\n        idLenght,\n        category,\n      }) => {\n        // console.log(title);\n        return markUpPage(\n          photo,\n          title,\n          abstract,\n          date,\n          url,\n          category,\n          id,\n          idLenght\n        );\n      }\n    )\n    .join('');\n  listNews.insertAdjacentHTML('beforeend', array);\n}\n\nfunction deletNewsFavorite(e) {\n  if (!e.target.classList.contains('button')) {\n    return;\n  } else if (e.target.classList.contains('add')) {\n    const findIndex = +idArrayPars.findIndex(\n      el => el.idLenght === +e.target.attributes[2].value\n    );\n    // console.log(e.target.attributes[2].value);\n    idArrayPars.splice(findIndex, 1);\n\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(idArrayPars));\n\n    e.target.parentNode.parentNode.parentNode.remove();\n  }\n}\n\nexport function auditArrayNews() {\n  idArrayPars.map(el => {\n    listNews.querySelectorAll('.set').forEach(element => {\n      let id = element.dataset.id;\n\n      if (id === el.id) {\n        // console.log(element)\n        element\n          .querySelector('.js-button_favorites')\n          .setAttribute('checked', 'true');\n        element.querySelector('.js-button_favorites').classList.add('add');\n        element.querySelector('.button').classList.add('add');\n\n        element.querySelector('lable').innerHTML = 'Remove From Favorite';\n      }\n    });\n  });\n}\n\nexport function buttonClass() {\n  let but = document.querySelectorAll('.js-button_favorites');\n  let label = document.querySelectorAll('lable');\n\n  but.forEach(el => {\n    el.setAttribute('checked', 'true');\n    el.classList.add('add');\n  });\n  label.forEach(el => {\n    el.innerHTML = 'Remove From Favorite';\n  });\n}\n","\n// import {arrayOfReadNews, checkStorageReadNews, getNewsToLocalStorage, makeOpacityReadedNews} from '../read/localStorage.js'\nimport { getStorage,setStorage } from '../local-storage';\n\n  \n    // --------------------------------------------------при нажатии на ссылку в карточке новостей собирает данные с разметки текущей карточки в обьект и записывает в localStorage\nexport const getNewsToLocalStorage = function (e,arr) {\n  const readMoreLinks = document.querySelectorAll('.read');\n  console.log(readMoreLinks)\n  const DateNow = new Date()\n    .toLocaleDateString([], {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n    })\n    .replaceAll('.', '/');\n  readMoreLinks.forEach(link => {\n    if (e.target === link) {\n      const objectRead = {\n        category:\n          e.target.parentNode.parentNode.firstElementChild.nextSibling\n            .nextSibling.childNodes[5].innerText,\n        photo:\n          e.target.parentNode.parentNode.firstElementChild.nextSibling\n            .nextSibling.firstElementChild.src,\n        date: e.target.parentNode.firstElementChild.innerText,\n        url: e.target.href,\n        title:\n          e.target.parentNode.previousSibling.previousSibling.previousSibling\n            .previousSibling.innerText,\n        abstract: e.target.parentNode.previousSibling.previousSibling.innerText,\n        id: e.target.parentNode.parentNode.dataset.id,\n        // readDate: \"18/02/2023\",\n        readDate: DateNow,\n      };\n      for (const item of arr) {\n        if (item.id === objectRead.id) {\n          return;\n        }\n      }\n      e.target.parentNode.parentNode.firstElementChild.classList.remove(\n        'noActive-over'\n      );\n      e.target.parentNode.parentNode.firstElementChild.classList.add(\n        'active-over'\n      );\n      e.target.parentNode.parentNode.firstElementChild.nextSibling.nextSibling.childNodes[3].classList.remove(\n        'noActive-rmBtn'\n      );\n      e.target.parentNode.parentNode.firstElementChild.nextSibling.nextSibling.childNodes[3].classList.add(\n        'active-rmBtn'\n      );\n       arr.push(objectRead);\n      setStorage('readNews', arr);\n    } else {\n      return;\n    }\n  });\n}\n// --------------------------------------------------при нажатии на ссылку в карточке новостей собирает данные с разметки текущей карточки в обьект и записывает в localStorage\n\n// ---------------------поставить в .finally каждого фетча, Функция для додавания класса прозрачности просмотренным новостям после рендера разметки\nexport const makeOpacityReadedNews = function (callBack) {\n    callBack()\n//   auditArrayNews();\n  const newsContainer = document.querySelectorAll('.set');\n  const readNews = getStorage('readNews');\n  if (!readNews) {\n    return;\n  }\n  newsContainer.forEach(item => {\n    for (let i = 0; i < readNews.length; i++) {\n      const element = readNews[i];\n      if (item.dataset.id === element.id) {\n        const alredy = item.childNodes[3].childNodes[3];\n        const overlay = item.firstElementChild;\n        overlay.classList.add('active-over');\n        overlay.classList.remove('noActive-over');\n        alredy.classList.remove('noActive-rmBtn');\n        alredy.classList.add('active-rmBtn');\n      }\n    }\n  });\n}\n// ---------------------поставить в .finally каждого фетча, Функция для додавания класса прозрачности просмотренным новостям после рендера разметки","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { searchForm, readNewsDateContainer, notFound } from '../refs/index';\nimport { getStorage } from '../local-storage/index';\nimport { markUpPage } from '../markup/index';\nimport { auditArrayNews } from '../favorites/index'; //\n\nsearchForm.addEventListener('submit', handleSubmitSearchForm);\n\nfunction handleSubmitSearchForm(event) {\n  event.preventDefault();\n\n  const searchingNews = event.target.search.value.trim().toLowerCase();\n\n  if (!searchingNews) {\n    return makeInfoMessage('What would you like to find?');\n  }\n\n  searchFromCurrentPage(searchingNews);\n\n  event.currentTarget.reset();\n}\n\nfunction searchFromCurrentPage(searchingNews) {\n  let storageKey = 'ID-SAVE-FAVORITE';\n\n  const listNews = document.querySelector('.list-news');\n  listNews.innerHTML = '';\n\n  const newsArr = getStorage(storageKey);\n\n  const desiredNews = newsArr.filter(news =>\n    news.title.toLowerCase().includes(searchingNews)\n  );\n\n  showNothingNotFound(desiredNews);\n  appendArticleMarkup(desiredNews, listNews);\n  auditArrayNews();\n}\n\nfunction appendArticleMarkup(desiredNews, container) {\n  const cardSet = desiredNews\n    .map(({ photo, title, abstract, date, url, category, id, idLenght }) =>\n      markUpPage(photo, title, abstract, date, url, category, id, idLenght)\n    )\n    .join('');\n\n  container.innerHTML = cardSet;\n}\n\nfunction showNothingNotFound(arr) {\n  notFound.classList.add('not-found-hidden');\n\n  if (arr.length === 0) {\n    notFound.classList.remove('not-found-hidden');\n  }\n}\n\nfunction makeInfoMessage(message) {\n  if (window.matchMedia('(max-width: 767px)').matches) {\n    return;\n  }\n  Notify.info(message);\n}\n"],"names":["parcelRequire","$8nrFW","$bpWze","$234e5f094941aec9$export$e1057364ed3a7331","e","arr","readMoreLinks","document","querySelectorAll","console","log","DateNow","Date","toLocaleDateString","year","month","day","replaceAll","forEach","link","target","objectRead","category","parentNode","firstElementChild","nextSibling","childNodes","innerText","photo","src","date","url","href","title","previousSibling","abstract","id","dataset","readDate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","classList","remove","add","push","setStorage","$7a5ee36cdaf045b9$var$arrayOfReadNews","getStorage","$parcel$interopDefault","array","$7a5ee36cdaf045b9$var$listNews","querySelector","$7a5ee36cdaf045b9$var$LOCALSTORAGE_KEY","$7a5ee36cdaf045b9$var$idArray","localStorage","getItem","$7a5ee36cdaf045b9$var$idArrayPars","JSON","parse","$7a5ee36cdaf045b9$export$c0c869611b1be208","map","el","element","setAttribute","innerHTML","addEventListener","contains","findIndex","idLenght","attributes","splice","setItem","stringify","$7a5ee36cdaf045b9$var$deletNewsFavorite","param","media","$aDyNI","markUpPage","join","insertAdjacentHTML","callBack","newsContainer","readNews","item","i","length","alredy","overlay","$h6c0i","$7rHhr","searchForm","event","preventDefault","searchingNews","search","trim","toLowerCase","message","window","matchMedia","matches","Notify","info","$a83cc4d96efdeb5e$var$makeInfoMessage","storageKey","listNews","desiredNews","filter","news","includes","notFound","$a83cc4d96efdeb5e$var$showNothingNotFound","container","cardSet","$a83cc4d96efdeb5e$var$appendArticleMarkup","$a83cc4d96efdeb5e$var$searchFromCurrentPage","currentTarget","reset"],"version":3,"file":"favorite.ba815cd4.js.map"}