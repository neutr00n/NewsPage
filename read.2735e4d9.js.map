{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,uCAIA,MAIME,EAYN,SAAoBC,GAChB,MAAMC,EAAW,GACjB,IAAKD,EACD,OAEJ,IAAK,IAAIE,EAAS,EAAGA,EAASF,EAAIG,OAAQD,GAAU,EAAE,CAClD,MAAME,EAAOJ,EAAIE,GAAQG,SACnBC,EAAWN,EAAIE,GACjBD,EAASG,GAASH,EAASG,GAAMG,KAAKD,GACtCL,EAASG,GAAQ,CAACE,E,CAG1B,OAAOL,C,CAxBQO,EAJU,EAAAV,EAAAW,YAAW,aAOxC,IA6BiCC,EALjC,SAASC,EAAcX,GAEnB,OADgBA,EAAIY,KAAI,EAACC,MAACA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQX,KAAEA,EAAIY,IAAEA,EAAGC,SAAEA,EAAQC,GAACA,EAAEC,SAAGA,MAAc,EAAAC,EAAAC,YAAWR,EAAOC,EAAOC,EAAUX,EAAMY,EAAKC,EAAUC,EAAIC,KAAWG,KAAK,G,CAxBhKvB,GA4BwBW,EAzBDX,EA0BdwB,OAAOC,KAAKd,GACpBe,SAASrB,IACX,MAAMsB,EAAgB,oFAC4BtB,sYAUlDuB,EAAAC,sBAAsBC,mBAAmB,YAAaH,EAAc,IAKzDI,SAASC,iBAAiB,aAC9BN,SAAQO,IACf,MAAMC,EAAWD,EAAOE,YAAYA,YAC9BC,EAAaH,EAAOI,kBAAkBC,UACtCC,EAAWf,OAAOC,KAAKzB,GAC7B,IAAK,MAAMwC,KAASD,EACZC,IAAUJ,IACVF,EAASO,UAAY7B,EAAcZ,EAAWwC,KAGtDP,EAAOS,iBAAiB,SAAS,KAC7BC,QAAQC,IAAIX,EAAOY,iBAAiBR,mBACpCJ,EAAOY,iBAAiBR,kBAAkBS,UAAUC,OAAO,gBAC3Dd,EAAOE,YAAYA,YAAYW,UAAUC,OAAO,OAAO,GACzD,KA5DFnB,EAAAoB,SAASF,UAAUG,OAAO,oBCblC,IAAAC,EAAApD,EAAA,S,uCAMA8B,EAAAuB,WAAWT,iBAAiB,UAE5B,SAAgCU,GAC9BA,EAAMC,iBAEN,MAAMC,EAAgBF,EAAMG,OAAOC,OAAOC,MAAMC,OAAOC,cAEvD,IAAKL,EACH,OA2CJ,SAAyBM,GACvB,GAAIC,OAAOC,WAAW,sBAAsBC,QAC1C,OAEFb,EAAAc,OAAOC,KAAKL,E,CA/CHM,CAAgB,iCAQ3B,SAA+BZ,GAC7B,IAAIa,EAAa,WAEjBvC,EAAAC,sBAAsBY,UAAY,GAElC,MAAM2B,EAAWrC,SAASsC,cAAc,mBAIlCC,GAFU,EAAAvE,EAAAW,YAAWyD,GAECI,QAAOC,GACjCA,EAAKzD,MAAM4C,cAAcc,SAASnB,KAiBTrD,EAdPqE,EAepB1C,EAAAoB,SAASF,UAAU4B,IAAI,oBAEJ,IAAfzE,EAAIG,QACNwB,EAAAoB,SAASF,UAAUG,OAAO,oBAd9B,SAA6BqB,EAAaK,GACxC,MAAMC,EAAUN,EACbzD,KAAI,EAACC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQX,KAAEA,EAAIY,IAAEA,EAAGC,SAAEA,EAAQC,GAAEA,EAAEC,SAAEA,MACvD,EAAAC,EAAAC,YAAWR,EAAOC,EAAOC,EAAUX,EAAMY,EAAKC,EAAUC,EAAIC,KAE7DG,KAAK,IAERoD,EAAUlC,UAAYmC,C,CAVtBC,CAAoBP,EAAaF,GAanC,IAA6BnE,C,EAhC3B6E,CAAsBxB,GAEtBF,EAAM2B,cAAcC,O","sources":["src/read.js","src/js/read/index.js","src/js/search/read-search.js"],"sourcesContent":["import './js/mobile-menu';\nimport './js/dark_theme';\n\nimport './js/read';\nimport './js/search/read-search';\n","import { getStorage } from \"../local-storage\";\nimport { markUpPage } from '../markup/index';\nimport { notFound } from '../refs/index';\n\nconst localStorageReadNews = getStorage('readNews');\n\nimport { readNewsDateContainer } from '../refs/index';\n\nconst sortedNews = sortByDate(localStorageReadNews);\nstartPage();\n\nfunction startPage() {\n    if (!sortedNews) {\n        notFound.classList.remove('not-found-hidden');\n    } else {\n        createContainerFromDate(sortedNews);\n        renderByDate();\n    };\n};\n\nfunction sortByDate(arr) {\n    const dateSort = {};\n    if (!arr) {\n        return;\n    };\n    for (let object = 0; object < arr.length; object += 1){\n        const date = arr[object].readDate;\n        const objOfArr = arr[object];\n        if (dateSort[date]) { dateSort[date].push(objOfArr) } else {\n            dateSort[date] = [objOfArr];\n        };\n    };\n    return dateSort;\n};\n\nfunction renderCardSet(arr) {\n    const cardSet = arr.map(({photo, title, abstract, date, url, category,id,  idLenght}) => markUpPage(photo, title, abstract, date, url, category, id, idLenght)).join('');\n    return cardSet\n};\n\nfunction createContainerFromDate(obj) {\n    const dates = Object.keys(obj)\n    dates.forEach((date) => {\n        const dateContainer = `<div class='date-card'>\n  <button class='date-btn'><span class='date-btn__text'>${date}</span><span class='read_icon'>\n  <svg class=\"date-btn___arrow\" width=\"14\" height=\"9\" aria-hidden=\"true\" style=\"position: absolute;>\n<symbol id=\"icon-Vector-2-1\" viewBox=\"0 0 50 32\">\n<path d=\"M5.867 0l-5.867 6.080 24.889 25.92 24.889-25.92-5.831-6.080-19.058 19.769-19.058-19.769z\"></path>\n</symbol>\n</svg >\n  </span>\n  </button>\n   <div class='list-news dates'></div>\n  </div>`;\n        readNewsDateContainer.insertAdjacentHTML(\"beforeend\", dateContainer)\n    });\n};   \n\nfunction renderByDate() {\nconst dateButton = document.querySelectorAll('.date-btn');\n    dateButton.forEach(button => {\n        const newsList = button.nextSibling.nextSibling;\n        const buttonText = button.firstElementChild.innerText;\n        const arrDates = Object.keys(sortedNews);\n        for (const dates of arrDates) {\n            if (dates === buttonText) {\n                newsList.innerHTML = renderCardSet(sortedNews[dates]);\n            };\n        };\n        button.addEventListener('click', () => {\n            console.log(button.lastElementChild.firstElementChild)\n            button.lastElementChild.firstElementChild.classList.toggle('arrow_rotate');\n            button.nextSibling.nextSibling.classList.toggle('show');\n        });\n    });\n};\n\n\n\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { searchForm, readNewsDateContainer, notFound } from '../refs/index';\nimport { getStorage } from '../local-storage/index';\nimport { markUpPage } from '../markup/index';\n\nsearchForm.addEventListener('submit', handleSubmitSearchForm);\n\nfunction handleSubmitSearchForm(event) {\n  event.preventDefault();\n\n  const searchingNews = event.target.search.value.trim().toLowerCase();\n\n  if (!searchingNews) {\n    return makeInfoMessage('What would you like to find?');\n  }\n\n  searchFromCurrentPage(searchingNews);\n\n  event.currentTarget.reset();\n}\n\nfunction searchFromCurrentPage(searchingNews) {\n  let storageKey = 'readNews';\n\n  readNewsDateContainer.innerHTML = '';\n\n  const listNews = document.querySelector('.read-list-news');\n\n  const newsArr = getStorage(storageKey);\n\n  const desiredNews = newsArr.filter(news =>\n    news.title.toLowerCase().includes(searchingNews)\n  );\n\n  showNothingNotFound(desiredNews);\n  appendArticleMarkup(desiredNews, listNews);\n}\n\nfunction appendArticleMarkup(desiredNews, container) {\n  const cardSet = desiredNews\n    .map(({ photo, title, abstract, date, url, category, id, idLenght }) =>\n      markUpPage(photo, title, abstract, date, url, category, id, idLenght)\n    )\n    .join('');\n\n  container.innerHTML = cardSet;\n}\n\nfunction showNothingNotFound(arr) {\n  notFound.classList.add('not-found-hidden');\n\n  if (arr.length === 0) {\n    notFound.classList.remove('not-found-hidden');\n  }\n}\n\nfunction makeInfoMessage(message) {\n  if (window.matchMedia('(max-width: 767px)').matches) {\n    return;\n  }\n  Notify.info(message);\n}\n"],"names":["parcelRequire","$eLqhd","$2f931b6fc00751e1$var$sortedNews","arr","dateSort","object","length","date","readDate","objOfArr","push","$2f931b6fc00751e1$var$sortByDate","getStorage","obj","$2f931b6fc00751e1$var$renderCardSet","map","photo","title","abstract","url","category","id","idLenght","$6eyJa","markUpPage","join","Object","keys","forEach","dateContainer","$icTnc","readNewsDateContainer","insertAdjacentHTML","document","querySelectorAll","button","newsList","nextSibling","buttonText","firstElementChild","innerText","arrDates","dates","innerHTML","addEventListener","console","log","lastElementChild","classList","toggle","notFound","remove","$iQIUW","searchForm","event","preventDefault","searchingNews","target","search","value","trim","toLowerCase","message","window","matchMedia","matches","Notify","info","$a2204ae2c1c7389a$var$makeInfoMessage","storageKey","listNews","querySelector","desiredNews","filter","news","includes","add","container","cardSet","$a2204ae2c1c7389a$var$appendArticleMarkup","$a2204ae2c1c7389a$var$searchFromCurrentPage","currentTarget","reset"],"version":3,"file":"read.2735e4d9.js.map"}